name: Build and Preview Docs

on:
  pull_request:
    paths:
      - 'docs/**'
      - '.github/workflows/site-preview.yml'

jobs:
  preview:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: docs

    env:
      NEXT_PUBLIC_BASE_PATH: /covid-chest-imaging-database

    steps:
      - name: Get files
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create deployment
        id: deployment
        run: |
          echo "Creating deployment for ref: ${{ github.head_ref }} / ${{ github.event.pull_request.head.sha }}"
          API_RESPONSE=$(curl -H "Accept: application/vnd.github.ant-man-preview+json" -H "Authorization: token ${{ github.token }}" -X POST -H 'Content-Type: application/json' -d '{"ref": "${{ github.event.pull_request.head.sha }}", "environment": "preview", "transient_environment": true, "description": "Pages preview", "required_contexts": []}' "https://api.github.com/repos/$GITHUB_REPOSITORY/deployments")
          STATUSES_URL=$(echo $API_RESPONSE | jq .statuses_url)
          if [ "${STATUSES_URL}" = "null" ]; then echo "Invalid Statuses URL, stop here to avoid issues further down."; echo $API_RESPONSE | jq . ; exit 1; fi
          echo "::set-output name=statuses_url::$STATUSES_URL"

      - name: Install packages
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Export static files
        run: npm run export

      - name: Update deployment status (in_progress)
        run: |
          curl -H "Accept: application/vnd.github.flash-preview+json" -H "Authorization: token ${{ github.token }}" -X POST -H 'Content-Type: application/json' -d '{"state": "in_progress"}' ${{ steps.deployment.outputs.statuses_url }}

      - name: Upload S3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DOCS_PREVIEW_BUCKET_REGION }}
      - run: aws s3 sync --delete out s3://${{ secrets.AWS_DOCS_PREVIEW_BUCKET }}/${{ github.event.pull_request.head.sha }}/

      - name: Update deployment status (success)
        if: success()
        run: |
          curl -H "Accept: application/vnd.github.ant-man-preview+json" -H "Authorization: token ${{ github.token }}" -X POST -H 'Content-Type: application/json' -d '{"state": "success", "environment_url": "'"http://${{ secrets.AWS_DOCS_PREVIEW_BUCKET }}.s3-website.${{ secrets.AWS_DOCS_PREVIEW_BUCKET_REGION }}.amazonaws.com/${{ github.event.pull_request.head.sha }}/"'"}' ${{ steps.deployment.outputs.statuses_url }}

      - name: Update deployment status (failure)
        if: failure()
        run: |
          curl -H "Accept: application/vnd.github.ant-man-preview+json" -H "Authorization: token ${{ github.token }}" -X POST -H 'Content-Type: application/json' -d '{"state": "failure"}' ${{ steps.deployment.outputs.statuses_url }}
